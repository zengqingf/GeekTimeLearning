// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace TMSDKClient.FlatBuffers
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct CallResult : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static CallResult GetRootAsCallResult(ByteBuffer _bb) { return GetRootAsCallResult(_bb, new CallResult()); }
  public static CallResult GetRootAsCallResult(ByteBuffer _bb, CallResult obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CallResult __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public TMSDKClient.FlatBuffers.ResultCode Code { get { int o = __p.__offset(4); return o != 0 ? (TMSDKClient.FlatBuffers.ResultCode)__p.bb.GetSbyte(o + __p.bb_pos) : TMSDKClient.FlatBuffers.ResultCode.Success; } }
  public string Message { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMessageBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMessageBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMessageArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<TMSDKClient.FlatBuffers.CallResult> CreateCallResult(FlatBufferBuilder builder,
      TMSDKClient.FlatBuffers.ResultCode code = TMSDKClient.FlatBuffers.ResultCode.Success,
      StringOffset messageOffset = default(StringOffset)) {
    builder.StartTable(2);
    CallResult.AddMessage(builder, messageOffset);
    CallResult.AddCode(builder, code);
    return CallResult.EndCallResult(builder);
  }

  public static void StartCallResult(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddCode(FlatBufferBuilder builder, TMSDKClient.FlatBuffers.ResultCode code) { builder.AddSbyte(0, (sbyte)code, 0); }
  public static void AddMessage(FlatBufferBuilder builder, StringOffset messageOffset) { builder.AddOffset(1, messageOffset.Value, 0); }
  public static Offset<TMSDKClient.FlatBuffers.CallResult> EndCallResult(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<TMSDKClient.FlatBuffers.CallResult>(o);
  }
};


}
