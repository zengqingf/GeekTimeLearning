// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

//From : Unity Setup Dir\Unity\2018.4.23f1\Unity\Editor\Data\PlaybackEngines\AndroidPlayer\Tools\GradleTemplates\mainTemplate.gradle
buildscript {
	repositories {
		maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
		maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
		mavenCentral()
		google()
		jcenter()
	}

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
**BUILD_SCRIPT_DEPS**}
}

allprojects {
   repositories {
   	  maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
	  maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
	  mavenCentral()
	  google()
      jcenter()
	  
      flatDir {
        dirs 'libs'
      }
   }
}

apply plugin: 'com.android.application'
**APPLY_PLUGINS**

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
**DEPS**

	//need by bridge module
    api 'com.alibaba:arouter-api:1.5.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.5.1'
    implementation 'com.alibaba:fastjson:1.1.72.android'
    implementation 'com.orhanobut:logger:2.2.0'
}
android {
	compileSdkVersion **APIVERSION**
	buildToolsVersion '**BUILDTOOLS**'
	
	compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

	defaultConfig {
		minSdkVersion **MINSDKVERSION**
		targetSdkVersion **TARGETSDKVERSION**
		applicationId '**APPLICATIONID**'
		
		//need for gradle build
		multiDexEnabled true
		
		ndk {
	            abiFilters **ABIFILTERS**
	        }
	        versionCode **VERSIONCODE**
        	versionName '**VERSIONNAME**'
		
		//need by bridge module
		javaCompileOptions {
            		annotationProcessorOptions {
                	arguments = [AROUTER_MODULE_NAME: project.getName()]
            		}
        	}
	}

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb'**STREAMING_ASSETS**]
    }**SIGN**

    buildTypes {
        debug {
            minifyEnabled **MINIFY_DEBUG**
            useProguard **PROGUARD_DEBUG**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
            jniDebuggable true
        }
        release {
            minifyEnabled **MINIFY_RELEASE**
            useProguard **PROGUARD_RELEASE**
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD****SIGNCONFIG**
        }
    }**PACKAGING_OPTIONS****SPLITS**
**BUILT_APK_LOCATION**
    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = false
        }
        abi {
            enableSplit = true
        }
    }
}**SPLITS_VERSION_CODE****REPOSITORIES****SOURCE_BUILD_SETUP**
