{
  "available_profiles": {
    "default": "High-quality standard checks with a low false positive rate.",
    "sensitive": "Default checks + more comprehensive checks with a low false positive rate.",
    "extreme": "Sensitive checks + more comprehensive checks with a manageable false positive rate.",
    "portability": "Checks that aim to detect code issues emerging from platform differences (eg. between 32-bit and 64-bit architectures).",
    "security": "Checkers that warn for potentially vulnerable code. Contains all SEI Cert C/C++ rules."
  },
  "analyzers": {
    "clangsa": {
      "default": [
        "apiModeling",
        "core",
        "cplusplus",
        "deadcode",
        "nullability.NullPassedToNonnull",
        "nullability.NullReturnedFromNonnull",
        "optin.cplusplus",
        "optin.portability",
        "security.FloatLoopCounter",
        "security.insecureAPI.UncheckedReturn",
        "security.insecureAPI.getpw",
        "security.insecureAPI.gets",
        "security.insecureAPI.mkstemp",
        "security.insecureAPI.mktemp",
        "security.insecureAPI.rand",
        "security.insecureAPI.vfork",
        "unix",
        "valist"
      ],
      "sensitive": [
        "alpha.core.BoolAssignment",
        "alpha.core.CastSize",
        "alpha.core.Conversion",
        "alpha.core.DynamicTypeChecker",
        "alpha.core.SizeofPtr",
        "alpha.core.TestAfterDivZero",
        "alpha.cplusplus",
        "alpha.security.MallocOverflow",
        "alpha.security.MmapWriteExec",
        "alpha.security.ReturnPtrRange",
        "alpha.security.taint",
        "alpha.unix.BlockInCriticalSection",
        "alpha.unix.Chroot",
        "alpha.unix.PthreadLock",
        "alpha.unix.Stream",
        "alpha.unix.cstring.NotNullTerminated",
        "alpha.unix.cstring.OutOfBounds",
        "apiModeling",
        "core",
        "cplusplus",
        "deadcode",
        "nullability",
        "optin.cplusplus",
        "optin.mpi",
        "optin.portability",
        "security.FloatLoopCounter",
        "security.insecureAPI.UncheckedReturn",
        "security.insecureAPI.getpw",
        "security.insecureAPI.gets",
        "security.insecureAPI.mkstemp",
        "security.insecureAPI.mktemp",
        "security.insecureAPI.rand",
        "security.insecureAPI.vfork",
        "unix",
        "valist"
      ],
      "security":[
        "alpha.core.PointerSub",
        "alpha.core.PointerArithm",
        "alpha.core.Conversion",
        "alpha.core.CastToStruct",
        "cplusplus.PlacementNew",
        "option.cplusplus.VirtualCall",
        "alpha.unix.Chroot",
        "alpha.security",
        "alpha.unix.cstring.OutOfBounds",
        "alpha.unix.cstring.BufferOverlap",
        "alpha.unix.PthreadLock",
        "alpha.unix.Stream",
        "option.cplusplus.VirtualCall"
      ],
      "portability": [
        "apiModeling",
        "optin.portability"
      ],
      "extreme": [
        "alpha",
        "apiModeling",
        "core",
        "cplusplus",
        "deadcode",
        "nullability",
        "optin",
        "security",
        "unix",
        "valist"
      ]
    },
    "clang-tidy": {
      "default": [
        "bugprone-assert",
        "bugprone-bool",
        "bugprone-copy",
        "bugprone-dangling",
        "bugprone-dynamic-static-initializers",
        "bugprone-fold",
        "bugprone-forward",
        "bugprone-inaccurate",
        "bugprone-incorrect",
        "bugprone-infinite-loop",
        "bugprone-integer",
        "bugprone-lambda",
        "bugprone-macro-repeated",
        "bugprone-misplaced",
        "bugprone-move",
        "bugprone-not-null-terminated-result",
        "bugprone-sizeof",
        "bugprone-signed-char-misuse",
        "bugprone-string-compare",
        "bugprone-string-constructor",
        "bugprone-string-literal",
        "bugprone-suspicious-enum",
        "bugprone-suspicious-memset",
        "bugprone-suspicious-missing",
        "bugprone-suspicious-semicolon",
        "bugprone-swapped",
        "bugprone-terminating",
        "bugprone-throw",
        "bugprone-too",
        "bugprone-undefined",
        "bugprone-undelegated",
        "bugprone-unused",
        "bugprone-use",
        "bugprone-virtual",
        "cert-dcl54",
        "cert-dcl58",
        "cert-dcl59",
        "cert-err09",
        "cert-fio38",
        "cert-mem57-cpp",
        "cert-oop11",
        "cert-oop58-cpp",
        "cert-pos44-c",
        "cppcoreguidelines-special",
        "google-build-namespaces",
        "google-global",
        "misc-assert",
        "misc-bool",
        "misc-dangling",
        "misc-definitions",
        "misc-fold",
        "misc-forward",
        "misc-forwarding",
        "misc-inaccurate",
        "misc-incorrect",
        "misc-inefficient",
        "misc-lambda",
        "misc-macro",
        "misc-misplaced",
        "misc-move",
        "misc-redundant",
        "misc-sizeof",
        "misc-string-compare",
        "misc-string-constructor",
        "misc-string-literal",
        "misc-suspicious-enum",
        "misc-suspicious-missing",
        "misc-suspicious-semicolon",
        "misc-swapped",
        "misc-unconventional",
        "misc-uniqueptr",
        "misc-unused-raii",
        "misc-use",
        "misc-virtual",
        "performance-inefficient-algorithm",
        "performance-move",
        "performance-no-automatic-move",
        "performance-noexcept",
        "performance-trivially-destructible"
     ],
      "sensitive": [
        "boost",
        "bugprone",
        "cert",
        "cppcoreguidelines-pro-type-static",
        "cppcoreguidelines-pro-type-const-cast",
        "cppcoreguidelines-slicing",
        "cppcoreguidelines-special",
        "ericsson-cert",
        "google-build",
        "google-explicit",
        "google-global",
        "google-runtime",
        "misc-argument",
        "misc-assert",
        "misc-bool",
        "misc-dangling",
        "misc-definitions",
        "misc-fold",
        "misc-forward",
        "misc-forwarding",
        "misc-inaccurate",
        "misc-incorrect",
        "misc-inefficient",
        "misc-lambda",
        "misc-macro",
        "misc-misplaced",
        "misc-move",
        "misc-multiple",
        "misc-redundant",
        "misc-sizeof",
        "misc-string",
        "misc-suspicious",
        "misc-swapped",
        "misc-unconventional",
        "misc-uniqueptr",
        "misc-unused-alias",
        "misc-unused-raii",
        "misc-unused-using",
        "misc-use",
        "misc-virtual",
        "modernize-deprecated-headers",
        "modernize-replace-auto-ptr",
        "modernize-replace-random-shuffle",
        "mpi",
        "performance"
      ],
      "security": [
        "cert",
        "bugprone-exception-escape",
        "bugprone-undefined-memory-manipulation",
        "bugprone-use-after-move",
        "bugprone-narrowing-conversions",
        "bugprone-suspicious-memset-usage",
        "bugprone-sizeof-expression",
        "cppcoreguidelines-slicing",
        "bugprone-unhandled-self-assignment",
        "bugprone-macro-repeated-side-effects"
      ],
      "portability": [
        "bugprone-misplaced-widening",
        "misc-misplaced-widening"
      ],
      "extreme": [
        "boost",
        "bugprone",
        "cert",
        "cppcoreguidelines",
        "google",
        "misc",
        "modernize",
        "mpi",
        "performance"
      ]
    }
  }
}
